How did viewing a diff between two versions of a file help you see the bug that was introduced?

It helped me see what has been updated so I can catch some changes that don't make sense.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

You can trace what went wrong easily so you can debug very efficiently.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

By manually choosing when to commit, I can commit whenever a logical change is made.
Automatic saves may cause unnecessary commits so it would be much harder to trace problems between commits.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

If multiple files are related for a changes, saving them in one commit makes a perfect sense.

How can you use the commands git log and git diff to view the history of files?

Git log returns a history of all commits. In turn, git diff can compare two separate commits.

How might using version control make you more confident to make changes that
could break something?

You can always go back to the point before you make changes.

Now that you have your workspace set up, what do you want to try using Git for?

I would like to use Git to trace all changes I will make.
